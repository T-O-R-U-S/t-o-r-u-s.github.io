@use "mixins.scss" as mixins;

$margin: 30px;

h1,
h2,
h3,
h4,
h5,
h6 {
    margin-left: $margin;
    
}

.gradient-fwd {
    background: linear-gradient(90deg, var(--accent-compliment), var(--accent));
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
}

.gradient-bwd {
    background: linear-gradient(90deg, var(--accent), var(--accent-compliment));
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
}

.red-banner {
    width: 100%;
    background-color: red;
    color: white;
    margin: 0;
    font-family: 'Open Sans';
    overflow-y: hidden;
    animation: linear move-up 5s forwards;
    transition: all;
}

@keyframes move-up {
    0% {
        height: max(3.5rem, 5vh);
    }
    95% {
        height: max(3.5rem, 5vh);
    }
    100% {
        height: 0vh;
    }
}

p {
    margin-left: $margin;
    font-size: 10pt;

    @media screen and (max-width: 6in) {
        font-size: 14pt;
    }
}

h1 {
    font-size: clamp(25pt, 140pt, 15vw);
}

h2 {
    font-size: clamp(20pt, 70pt, 10vw);
}

h3 {
    font-size: clamp(15pt, 50pt, 10vw);
}

h4 {
    font-size: clamp(10pt, 30pt, 10vw);
}

h5 {
    font-size: 10pt;
}

h6 {
    font-size: 5pt;
}

#theme-controls {
    @media screen and (min-width: 600px) {
        position: fixed;

        top: 1rem;
        right: 1rem;

        border-radius: 5px;

        padding: 0.5rem;
        padding-left: 1rem;
        padding-right: 1rem;

        z-index: 99999;

        width: fit-content;
    }

    color: var(--text);
    padding-top: 1rem;
    width: 100%;
    background-color: var(--background);
    display: flex;
    flex-direction: column;
    align-items: center;
}

header {
    --dot-spacing: 22px;

    height: 100vh;
    min-height: 40rem;

    // Dotted grid effect
    background-color: var(--background-contrast);
    background-size: var(--dot-spacing) var(--dot-spacing);
    background-image: radial-gradient(gray 2%, transparent 11%);

    display: flex;
    flex-direction: column;

    justify-content: center;
    align-items: flex-start;

    width: 100%;
}

label[for="theme-picker"] {
    font-family: monospace;
    text-shadow: rgba(#000000, 0.4) 1px 1px 5px;
    font-weight: bolder;
}

#oss-contributions {
    @media screen and (min-width: 7in) {
        grid-template-areas: 
        "rust rust"
        "hyper svelte"
        "nodejs nextjs";
        width: min-content;
    }

    grid-template-areas: "rust"
    "hyper"
    "svelte"
    "nodejs"
    "nextjs";

    column-gap: 3rem;
    row-gap: 3rem;

    margin: auto;

    margin-bottom: $margin;
}

#showcase {
    display: grid;

    @media screen and (min-width: 14.2in) {
        grid-template-columns: 40% 27.5% 27.5%;
        column-gap: 2rem;
    }

    > div {
        @media screen and (max-width: 7in) {
            padding-right: 0;
        }

        column-span: 1;
    }

    > div > div {
        width: calc(100% - 30px - $margin);

        margin: auto;

        display: grid;

        height: min-content;

        margin-bottom: $margin;
    }

    // Child div contains title and grid
    // Grid is a div, which must be accessed
    // Grid contains sub-divs which are what we want to style.
    > div > div > div {
        @include mixins.outline-hover;

        background-color: var(--background-contrast);

        p,h4,h5 {
            margin-left: 0;
        }

        padding: 2rem;
    }

    h3 {
        text-align: center;
        margin: auto;
        margin-bottom: $margin;
    }
}

#top-projects {
    display: flex;
    flex-direction: column;

    > div {
        margin-bottom: 3rem;
    }
}

#toolbox {
    font-weight: bolder;
    
    @media screen and (max-width: 14.2in) {
        ul {
            display: grid;
            grid-template-columns: 33.333333% 33.333333% 33.333333%;
            column-gap: 2rem;
        }   
    }
    li {
        line-height: 1.45rem;
    }
}

.hidden {
    position: absolute;
	overflow: hidden;
    top: -1;
    right: -1;
    width: 1px;
    height: 1px;
}

.rust {
    grid-area: rust;
}